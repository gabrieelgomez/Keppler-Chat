#index-container{ :controller => "conversations" }
  .container
    .row
      .listing.col-lg-12.col-xs-12
        %section.content-header.index-header
          %h1{ style: 'display: inline-block' }
            = t("keppler.modules.#{controller_path.underscore}")
          .toolbar
            - if can?(KepplerChat::Conversation).destroy_multiple?
              .toolbar-item
                .checkbox
                  %label{ for: 'checkbox-all' }
                    %input{ type: 'checkbox', id: 'checkbox-all', ':disabled' => "checkItems ? 'disabled' : ''", '@click' => 'selectAll()' }
                    %span.cr
                      %i.cr-icon.glyphicon.glyphicon-ok
            .toolbar-item
              %a.tool-btn{"data-confirm" => "¿Estás seguro?", "data-method" => "delete", "v-bind:href" => "link", :rel => "nofollow", ":class" => "{disabled: !checks}" }
                %i.icon-trash

          %ol.breadcrumb
            %li
              %a{ href: '#' }
                %i.icon-directions
                = t("keppler.modules.#{action_name.underscore}")

        .box.slice-box
          .box-body.no-padding
            .row
              -# .col-md-5
              .col-md-9
                %ul#conversations-list
                  - unless @conversations.nil?
                    - @conversations.each do |conversation|
                      = render 'conversations', conversation: conversation, user: current_user
              .col-md-3
                .panel.panel-primary
                  .panel-heading
                    %h3.panel-title Usuarios
                  .panel-body
                    %ul
                      - if @users.nil?
                        %h5 No hay usuarios conectados
                      - else
                        - @users.each do |user|
                          %li= link_to user.email, admin_chat_conversations_create_chat_path(user_id: user), remote: true, method: :post

  %aside#index-show.control-sidebar


:javascript
  $(document).ready(function(){
    $('#conversation').click(function() {
      $('#upload_file_conversation').click()
      $('#upload_file_conversation').change(function() {
        $('.waiting').css('display', 'block')
        $('#upload_form_conversation').submit()
      })
    });

    renderImg();
  });

  (function() {
    $(document).on('click', '.toggle-window', function(e) {
      e.preventDefault();
      var panel = $(this).parent().parent();
      var messages_list = panel.find('.messages-list');

      panel.find('.panel-body').toggle();
      panel.attr('class', 'panel panel-default');

      if (panel.find('.panel-body').is(':visible')) {
        var height = messages_list[0].scrollHeight;
        messages_list.scrollTop(height);
      }
    });
  })();


:scss
  ul {
    padding-left: 0px;
    list-style: none;
  }

  .messages-list {
    max-height: 200px;
    overflow-y: auto;
    overflow-x: hidden;
  }


  .message-sent {
    position: relative;
    background-color: #D9EDF7;
    border-color: #BCE8F1;
    margin: 5px 20px;
    padding: 10px;
    float: right;
  }


  .message-received {
    background-color: #F1F0F0;
    border-color: #EEEEEE;
    margin: 5px 20px;
    padding: 10px;
    float: left;
  }
